{"version":3,"sources":["history/history.js","actions/login.js","containers/LoginBar.jsx","components/base/Header.jsx","actions/tasks.js","containers/NewTask.jsx","containers/EditTaskForm.jsx","components/EditTaskModal.jsx","containers/TaskList.jsx","components/pages/Tasks.jsx","containers/LoginForm.jsx","components/pages/Login.jsx","components/pages/NotFound.jsx","AppRouter.js","reducers/login.js","reducers/tasks.js","reducers/index.js","store/index.js","index.js"],"names":["createBrowserHistory","AUTH","LOGOUT","baseUserData","authStatuses","success","invalidData","emptyContent","logout","auth","loginData","name","password","history","push","type","payload","status","LoginBar","e","preventDefault","this","props","login","react_default","a","createElement","className","Link","to","onClick","onLogout","bind","Component","connect","state","dispatch","bindActionCreators","Header","data-toggle","data-target","aria-controls","aria-expanded","aria-label","containers_LoginBar","baseUrl","defaultParams","developer","FETCH_TASKS","ADD_TASK","EDIT_TASK","SET_SORT","fetchTasks","pageNo","arguments","length","undefined","sortField","sortDirection","params","Object","objectSpread","page","sort_field","sort_direction","Axios","get","concat","then","response","currTasks","data","message","tasks","total","total_task_count","addTask","newTaskData","formData","FormData","append","username","email","text","post","headers","Content-Type","editTask","taskData","encodedStatus","encodeURIComponent","encodedText","encodedToken","paramString","signature","md5","id","setSort","NewTask","document","getElementById","classList","toggle","dataNewTask","userName","value","clearInputForm","add","_this","react","showForm","onSubmit","createTask","htmlFor","maxLength","required","ref","input","rows","EditTaskForm","checked","onClose","_this$props","aria-hidden","checkbox","defaultChecked","placeholder","defaultValue","EditTaskModal","target","contains","isOpen","ReactDOM","createPortal","closeModal","role","containers_EditTaskForm","body","TaskList","variantsSortIcon","active","default","showEditModal","editPopupData","currentTarget","getAttribute","sortByDesk","taskId","taskStatus","taskText","editTaskData","setState","_this2","currTaskTab","map","task","key","disabled","isLogged","nmbTabs","totalTasks","arrayTab","index","data-pageno","changeTabTasks","_this$state","components_EditTaskModal","editModalClose","setSortTasks","data-sort-field","react_fontawesome_index_es","icon","showListTasks","showPagination","containers_NewTask","Tasks","containers_TaskList","LoginForm","authErrorsText","loginInput","passwordInput","showErrors","aria-describedby","Login","containers_LoginForm","NotFound","library","faSortAmountUp","faSortAmountDown","AppRouter","Router","base_Header","Switch","Route","path","exact","component","initialState","maxNmbTabs","nmbTasks","newTasks","sortedTasks","isSortByDesk","allReducers","combineReducers","action","parseInt","toConsumableArray","sort","taskA","taskB","createStore","composeWithDevTools","applyMiddleware","thunk","render","es","store","src_AppRouter"],"mappings":"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","file":"static/js/main.9244fa26.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import history from '../history/history';\n\n\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\n\nconst baseUserData = {\n  name: 'admin',\n  password: '123',\n};\n\nexport const authStatuses = {\n  success: 'successAuth',\n  invalidData: 'invalidData',\n  emptyContent: 'emptyContent',\n  logout: 'logout',\n};\n\nexport const auth = (loginData) => {\n  if (!loginData.name || !loginData.password) {\n    return {\n      type: AUTH,\n      payload: {\n        status: authStatuses.emptyContent,\n      },\n    };\n  }\n\n  if (loginData.name === baseUserData.name && loginData.password === baseUserData.password) {\n    history.push('/');\n\n    return {\n      type: AUTH,\n      payload: {\n        status: authStatuses.success,\n        name: baseUserData.name,\n      },\n    };\n  }\n  return {\n    type: AUTH,\n    payload: {\n      status: authStatuses.invalidData,\n    },\n  };\n};\n\nexport const logout = () => {\n  history.push('/');\n\n  return {\n    type: LOGOUT,\n  };\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { logout, authStatuses } from '../actions/login';\n\nclass LoginBar extends Component {\n  onLogout(e) {\n    e.preventDefault();\n\n    this.props.logout();\n  }\n\n  render() {\n    const { login } = this.props;\n\n    if (login.status === authStatuses.success) {\n      return (\n        <div>\n          <span className=\"text-white\">\n            {login.name}\n            {' '}\n|\n          </span>\n          <Link to=\"/logout\" onClick={this.onLogout.bind(this)}>Logout</Link>\n        </div>\n      );\n    }\n    return (\n      <Link to=\"/login\">Login</Link>\n    );\n  }\n}\n\nLoginBar.propTypes = {\n  login: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\n\nfunction mapStateToProps(state) {\n  return {\n    login: state.login,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    logout,\n  }, dispatch);\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LoginBar);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport LoginBar from '../../containers/LoginBar';\n\n\nfunction Header() {\n  return (\n    <header>\n      <nav className=\"navbar navbar-toggleable-md navbar-inverse bg-inverse justify-content-between\">\n        <button\n          className=\"navbar-toggler navbar-toggler-right\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarsExampleDefault\"\n          aria-controls=\"navbarsExampleDefault\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        <Link to=\"/\"><span className=\"navbar-brand\">Home</span></Link>\n        <LoginBar />\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import Axios from 'axios';\nimport * as md5 from 'js-md5';\n\nconst baseUrl = 'https://uxcandy.com/~shapoval/test-task-backend';\n\n\nconst defaultParams = { developer: 'Vadim' };\n\nexport const FETCH_TASKS = 'FETCH_TASKS';\nexport const ADD_TASK = 'ADD_TASK';\nexport const EDIT_TASK = 'EDIT_TASK';\nexport const SET_SORT = 'SET_SORT';\n\n\nexport const fetchTasks = (pageNo = 1, sortField = null, sortDirection = null) => {\n  let params = {\n    ...defaultParams,\n    page: pageNo,\n  };\n\n  params = sortField ? {\n    ...params,\n    sort_field: sortField,\n    sort_direction: sortDirection,\n  } : params;\n\n  return dispatch => Axios.get(`${baseUrl}/`, { params })\n    .then((response) => {\n      dispatch({\n        type: FETCH_TASKS,\n        payload: {\n          currTasks: response.data.message.tasks,\n          total: response.data.message.total_task_count,\n          page: pageNo,\n        },\n      });\n    });\n};\n\nexport const addTask = (newTaskData) => {\n  const formData = new FormData();\n  formData.append('username', newTaskData.username);\n  formData.append('email', newTaskData.email);\n  formData.append('text', newTaskData.text);\n\n  return dispatch => Axios.post(`${baseUrl}/create`, formData, { headers: { 'Content-Type': 'multipart/form-data' }, params: defaultParams })\n    .then((response) => {\n      dispatch({\n        type: ADD_TASK,\n        payload: {\n          ...response.data.message,\n        },\n      });\n    });\n};\n\nexport const editTask = taskData => (dispatch) => {\n  const token = 'beejee';\n\n  const encodedStatus = encodeURIComponent(taskData.status);\n\n\n  const encodedText = encodeURIComponent(taskData.text);\n\n\n  const encodedToken = encodeURIComponent(token);\n\n  const paramString = `status=${encodedStatus}&text=${encodedText}&token=${encodedToken}`;\n\n\n  const signature = md5(paramString);\n\n  const formData = new FormData();\n  formData.append('status', taskData.status);\n  formData.append('text', taskData.text);\n  formData.append('signature', signature);\n  formData.append('token', token);\n\n\n  return Axios.post(`${baseUrl}/edit/${taskData.id}`,\n    formData, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n      params: {\n        ...defaultParams,\n      },\n    })\n    .then(() => {\n      dispatch({\n        type: EDIT_TASK,\n        payload: { ...taskData },\n      });\n    });\n};\n\n\nexport const setSort = sortField => ({\n  type: SET_SORT,\n  payload: sortField,\n});\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addTask } from '../actions/tasks';\n\nclass NewTask extends Component {\n  showForm() {\n    document.getElementById('taskForm').classList.toggle('d-none');\n  }\n\n  createTask(e) {\n    e.preventDefault();\n\n    const dataNewTask = {\n      username: this.userName.value,\n      email: this.email.value,\n      text: this.text.value,\n    };\n    this.props.addTask(dataNewTask);\n\n    this.clearInputForm();\n  }\n\n  clearInputForm() {\n    this.userName.value = '';\n    this.email.value = '';\n    this.text.value = '';\n    document.getElementById('taskForm').classList.add('hidden');\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <button type=\"button\" className=\"btn btn-outline-success\" onClick={this.showForm}>Add new task</button>\n\n        <form onSubmit={e => this.createTask(e)} id=\"taskForm\" className=\"d-none mt-4\">\n          <div className=\"form-group\">\n            <label htmlFor=\"taskUserName\">User name: *</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"taskUserName\"\n              maxLength=\"48\"\n              required\n              ref={input => this.userName = input}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"taskEmail\">Email: *</label>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"taskEmail\"\n              maxLength=\"48\"\n              required\n              ref={input => this.email = input}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"taskBody\">Task: *</label>\n            <textarea\n              className=\"form-control\"\n              id=\"taskBody\"\n              rows=\"2\"\n              maxLength=\"240\"\n              required\n              ref={input => this.text = input}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-outline-info\">Create task</button>\n        </form>\n      </Fragment>\n    );\n  }\n}\n\n\nNewTask.propTypes = {\n  addTask: PropTypes.func.isRequired,\n};\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    addTask: dataNewTask => addTask(dataNewTask),\n  }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(NewTask);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { editTask } from '../actions/tasks';\n\nclass EditTaskForm extends Component {\n  onSubmit(e) {\n    e.preventDefault();\n    const { id } = this.props.taskData;\n\n\n    const status = this.status.checked ? 10 : 0;\n\n\n    const text = this.text.value;\n\n    const taskData = {\n      id,\n      status,\n      text,\n    };\n\n    this.props.editTask(taskData);\n    this.props.onClose();\n  }\n\n  render() {\n    const { taskData, status, onClose } = this.props;\n    return (\n      <div className=\"modal-form\">\n        <form className=\"row col-12 justify-content-center\" onSubmit={this.onSubmit.bind(this)}>\n          <h2>Edit task</h2>\n          <div className=\"row col-12 justify-content-end\">\n            <button\n              type=\"button\"\n              className=\"close\"\n              aria-label=\"Close\"\n              onClick={onClose}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"form-group form-check\">\n            <input\n              type=\"checkbox\"\n              id=\"checkbox\"\n              className=\"form-check-input\"\n              ref={checkbox => this.status = checkbox}\n              defaultChecked={taskData.status === 10}\n            />\n            <label className=\"form-check-label\" htmlFor=\"checkbox\"><b>Is complete?</b></label>\n          </div>\n          <h1>{status}</h1>\n          <div className=\"col-12 form-group\">\n            <label htmlFor=\"text\">Task text</label>\n            <textarea\n              className=\"form-control\"\n              id=\"text\"\n              placeholder=\"Text\"\n              maxLength=\"100\"\n              required\n              ref={input => this.text = input}\n              defaultValue={taskData.text}\n            />\n          </div>\n          <button type=\"submit\" className=\"col-6 btn btn-primary\">Edit</button>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nEditTaskForm.propTypes = {\n  status: PropTypes.number,\n  taskData: PropTypes.object.isRequired,\n  editTask: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    editTask: taskData => editTask(taskData),\n  }, dispatch);\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(EditTaskForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport EditTaskForm from '../containers/EditTaskForm';\n\n\nclass EditTaskModal extends Component {\n  closeModal(e) {\n    const currElement = e.target;\n\n    if (currElement.classList.contains('modal-container')) {\n      this.props.onClose();\n    }\n  }\n\n  render() {\n    const { isOpen, onClose, taskData } = this.props;\n\n    return isOpen\n      ? ReactDOM.createPortal(\n        <div className=\"modal-container\" onClick={this.closeModal.bind(this)} role=\"presentation\">\n          <EditTaskForm onClose={onClose} taskData={taskData} />\n        </div>,\n        document.body,\n\t        )\n      : null;\n  }\n}\n\nEditTaskModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  taskData: PropTypes.object.isRequired,\n};\n\nexport default EditTaskModal;\n","import React, {Component, Fragment} from 'react';\nimport { connect } from 'react-redux';\n\nimport NewTask from './NewTask';\nimport EditTaskModal from '../components/EditTaskModal';\nimport {bindActionCreators} from \"redux\";\nimport {fetchTasks, setSort} from \"../actions/tasks\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nclass TaskList extends Component {\n\tstate = {\n\t\tvariantsSortIcon: {\n\t\t\tactive: 'sort-amount-up',\n\t\t\tdefault: 'sort-amount-down'\n\t\t},\n\t\tshowEditModal: false,\n\t\teditPopupData: {\n\t\t\tid: null,\n\t\t\tstatus: null,\n\t\t\ttext: null\n\t\t}\n\t};\n\tsetSortTasks(e) {\n\t\tlet sortField = e.currentTarget.getAttribute('data-sort-field');\n\n\t\tthis.props.setSort(sortField);\n\t}\n    changeTabTasks(e) {\n\t    const pageNo = e.currentTarget.getAttribute('data-pageno'),\n\t\t    sortField = this.props.tasks.sortField,\n\t\t    sortDirection = this.props.tasks.sortByDesk ? 'desc' : 'asc';\n\n\t    this.props.fetchTasks(pageNo, sortField, sortDirection);\n    }\n    editTask(taskId, taskStatus, taskText) {\n\t\tconst editTaskData = {\n\t\t\tid: taskId,\n\t\t\tstatus: taskStatus,\n\t\t\ttext: taskText\n\t\t};\n\t\tthis.setState({showEditModal: true});\n\t\tthis.setState({editPopupData: editTaskData});\n    }\n    editModalClose() {\n\t\tthis.setState({showEditModal: false});\n    }\n    showListTasks() {\n        if(this.props.tasks.currTaskTab) {\n            return this.props.tasks.currTaskTab.map( (task) => {\n\t            return (\n\t            \t    <tr key={task.id}>\n\t\t\t                <td className=\"text-center\">\n\t\t\t\t                <input type=\"checkbox\" checked={task.status === 10} disabled/>\n\t\t\t                </td>\n\t\t\t                <td className=\"text-center\">\n\t\t\t\t                {task.username}\n\t\t\t                </td>\n\t\t\t                <td className=\"text-center\">\n\t\t\t\t                {task.email}\n\t\t\t                </td>\n\t\t\t                <td className=\"text-center\">\n\t\t\t\t                {task.text}\n\t\t\t                </td>\n\t\t\t                <td className={ !this.props.login.isLogged ? 'd-none' : ''}>\n\t\t\t\t                <button\n\t\t\t\t\t                className=\"col-12 btn btn-success\"\n\t\t\t\t\t                onClick={ () => this.editTask(task.id, task.status, task.text)}\n\t\t\t\t                >\n\t\t\t\t\t                Edit\n\t\t\t\t                </button>\n\t\t\t                </td>\n\t\t                </tr>\n                );\n            });\n        }\n        return (\n        \t<tr>\n\t\t        <td>You haven't any tasks!</td>\n            </tr>\n        );\n    }\n    showPagination() {\n        let nmbTabs = this.props.tasks.totalTasks / 3;\n\n        nmbTabs = nmbTabs ?\n            nmbTabs % 1 === 0 ?\n                nmbTabs :\n                nmbTabs + 1\n            : 1;\n\n        let arrayTab = [];\n\n        for(let index = 1; index <= nmbTabs; index++) {\n            arrayTab.push (\n                <li className={`page-item ${index === this.props.tasks.page ? 'active': ''}`} key={index} data-pageno={index} onClick={this.changeTabTasks.bind(this)}>\n                    <span className=\"page-link\">{index}</span>\n                </li>\n            );\n        }\n        return arrayTab\n    }\n    render() {\n\t\tconst {showEditModal, editPopupData, variantsSortIcon} = this.state;\n\t\tconst {sortField} = this.props.tasks;\n\n        return (\n        \t<Fragment>\n\t            <EditTaskModal taskData={editPopupData} isOpen={showEditModal} onClose={this.editModalClose.bind(this)} />\n\t            <div>\n\t\t            <table className=\"table\">\n\t\t\t            <thead className=\"thead-light\">\n\t\t\t            <tr>\n\t\t\t\t            <th\n\t\t\t\t\t            className=\"text-center\"\n\t\t\t\t\t            onClick={this.setSortTasks.bind(this)}\n\t\t\t\t\t            data-sort-field=\"status\"\n\t\t\t\t            >\n\t\t\t\t\t            Status\n\t\t\t\t\t            <FontAwesomeIcon\n\t\t\t\t\t                icon={ sortField === 'status' && !this.props.tasks.sortByDesk ? variantsSortIcon.active : variantsSortIcon.default }\n\t\t\t\t\t            />\n\t\t\t\t            </th>\n\t\t\t\t            <th\n\t\t\t\t\t            className=\"text-center\"\n\t\t\t\t\t            onClick={this.setSortTasks.bind(this)}\n\t\t\t\t\t            data-sort-field=\"username\"\n\t\t\t\t            >\n\t\t\t\t\t            User Name\n\t\t\t\t\t            <FontAwesomeIcon\n\t\t\t\t\t\t            icon={sortField === 'username' && !this.props.tasks.sortByDesk ? variantsSortIcon.active : variantsSortIcon.default}\n\t\t\t\t\t            />\n\t\t\t\t            </th>\n\t\t\t\t            <th\n\t\t\t\t\t            className=\"text-center\"\n\t\t\t\t\t            onClick={this.setSortTasks.bind(this)}\n\t\t\t\t\t            data-sort-field=\"email\"\n\t\t\t\t            >\n\t\t\t\t\t            Email\n\t\t\t\t\t            <FontAwesomeIcon\n\t\t\t\t\t\t            icon={sortField === 'email' && !this.props.tasks.sortByDesk ? variantsSortIcon.active : variantsSortIcon.default}\n\t\t\t\t\t            />\n\t\t\t\t            </th>\n\t\t\t\t            <th className=\"text-center\">Text</th>\n\t\t\t\t            <th\n\t\t\t\t\t            className={`text-center ${!this.props.login.isLogged ? 'd-none' : ''}` }\n\t\t\t\t            >\n\t\t\t\t\t            Edit\n\t\t\t\t            </th>\n\t\t\t            </tr>\n\t\t\t            </thead>\n\t\t\t            <tbody>\n\t\t\t                {this.showListTasks()}\n\t\t\t            </tbody>\n\t\t            </table>\n\n\t                <nav aria-label=\"Page navigation example\">\n\t                    <ul className=\"pagination justify-content-center\">\n\t                        {this.showPagination()}\n\t                    </ul>\n\t                </nav>\n\t                <NewTask />\n\t            </div>\n\t        </Fragment>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n    \tlogin: state.login,\n        tasks: state.tasks\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\tfetchTasks: (pageNo, sortField, sortDirection) => fetchTasks(pageNo, sortField, sortDirection),\n\t\tsetSort: (sortField) => setSort(sortField)\n\t}, dispatch);\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n) (TaskList);\n","import React from 'react';\nimport TaskList from '../../containers/TaskList';\n\nexport default function Tasks() {\n  return (\n    <div className=\"container list-container\">\n      <h6 className=\"border-bottom border-gray pb-2 mb-0\">Recent tasks:</h6>\n      <TaskList />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {auth, authStatuses} from '../actions/login';\nimport {bindActionCreators} from \"redux\";\n\nclass LoginForm extends Component {\n\tstate = {\n\t\tauthErrorsText: {\n\t\t\temptyContent: 'Необхідно заповнити всі поля',\n\t\t\tinvalidData: 'Невірні дані'\n\t\t}\n\t};\n\tauth(e) {\n\t\te.preventDefault();\n\t\tconst name = this.loginInput.value,\n\t\t\tpassword = this.passwordInput.value;\n\n\t\tthis.props.auth({name, password});\n\t}\n\tshowErrors() {\n\t\tlet status = this.props.login.status;\n\t\tif( status === authStatuses.invalidData || status === authStatuses.emptyContent) {\n\t\t\tthis.clearInputForm();\n\n\t\t\treturn (\n\t\t\t\t<div className=\"col-12 alert alert-danger\" role=\"alert\">\n\t\t\t\t\t{this.state.authErrorsText[status]}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\tclearInputForm() {\n\t\tthis.loginInput.value = '';\n\t\tthis.passwordInput.value = '';\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.auth.bind(this)} className=\"row col-xs-6 col-lg-4 justify-content-center\">\n\t\t\t\t{this.showErrors()}\n\t\t\t\t<div className=\"col-12 form-group\">\n\t\t\t\t\t<label htmlFor=\"login\">Login</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t        className=\"form-control\"\n\t\t\t            id=\"login\"\n\t\t\t\t        aria-describedby=\"loginHelp\"\n\t\t\t            placeholder=\"Enter login\"\n\t\t\t\t\t\tmaxLength=\"20\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tref={ (input) => this.loginInput = input }\n\t\t\t\t\t/>\n\t\t\t\t\t\t<small id=\"loginHelp\" className=\"form-text text-muted\">\n\t\t\t\t\t\t\tEnter valid login\n\t\t\t\t\t\t</small>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-12 form-group\">\n\t\t\t\t\t<label htmlFor=\"passwordInput\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tid=\"passwordInput\"\n\t\t\t\t        placeholder=\"Password\"\n\t\t\t\t\t\tmaxLength=\"40\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tref={ (input) => this.passwordInput = input}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\" className=\"col-6 btn btn-primary\">Sign in</button>\n\t\t\t</form>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tlogin: state.login\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\tauth: (loginData) => auth(loginData)\n\t}, dispatch)\n}\n\nexport default connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n) (LoginForm);","import React from 'react';\nimport LoginForm from '../../containers/LoginForm';\n\nexport default function Login() {\n  return (\n    <div className=\"container row col-12 justify-content-center login-container\">\n      <LoginForm />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nfunction NotFound() {\n  return (\n    <div className=\"row justify-content-center \">\n      <h3 className=\"row col-12 justify-content-center\">Sorry this page not found</h3>\n      <Link to=\"/\">Back to home page</Link>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faSortAmountUp, faSortAmountDown } from '@fortawesome/free-solid-svg-icons';\nimport history from './history/history';\nimport Header from './components/base/Header';\nimport Tasks from './components/pages/Tasks';\nimport Login from './components/pages/Login';\nimport NotFound from './components/pages/NotFound';\nimport { fetchTasks } from './actions/tasks';\nimport './index.css';\n\n\nlibrary.add(faSortAmountUp, faSortAmountDown);\n\n\nclass AppRouter extends Component {\n  componentWillMount() {\n    this.props.fetchTasks();\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <div className=\"container-fluid\">\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact component={Tasks} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nAppRouter.propTypes = {\n  fetchTasks: PropTypes.func.isRequired,\n};\n\n\nfunction mapStateToProps(state) {\n  return {\n    tasks: state.tasks,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    fetchTasks,\n  }, dispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AppRouter);\n","import { AUTH, LOGOUT, authStatuses } from '../actions/login';\n\nconst initialState = {\n  isLogged: false,\n  name: null,\n  status: authStatuses.default,\n};\n\nexport default function tasks(state = initialState, action) {\n  switch (action.type) {\n    case AUTH:\n      if (action.payload.status !== authStatuses.success) {\n        return {\n          ...state,\n          isLogged: false,\n          status: action.payload.status,\n        };\n      }\n\n      return {\n        ...state,\n        name: action.payload.name,\n        isLogged: true,\n        status: authStatuses.success,\n      };\n\n    case LOGOUT:\n      return {\n        ...state,\n        isLogged: false,\n        name: null,\n        status: authStatuses.logout,\n      };\n    default:\n      return { ...state };\n  }\n}\n","import {\n  FETCH_TASKS, ADD_TASK, EDIT_TASK, SET_SORT,\n} from '../actions/tasks';\n\nconst initialState = {\n  page: 1,\n  sortField: null,\n  sortByDesk: true,\n};\n\nlet maxNmbTabs, nmbTasks, newTasks, sortedTasks, isSortByDesk, result;\n\nexport default function tasks(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_TASKS:\n      return {\n        ...state,\n        currTaskTab: action.payload.currTasks,\n        totalTasks: parseInt(action.payload.total, 10),\n        page: parseInt(action.payload.page, 10),\n      };\n    case ADD_TASK:\n      nmbTasks = parseInt(state.totalTasks, 10) + 1;\n\n      maxNmbTabs = (nmbTasks / 3) % 1 === 0\n        ? parseInt(nmbTasks / 3, 10)\n        : parseInt(nmbTasks / 3, 10) + 1;\n\n      return {\n        ...state,\n        currTaskTab: maxNmbTabs === state.page\n          ? [\n            ...state.currTaskTab,\n            action.payload,\n          ]\n          : state.currTaskTab,\n        totalTasks: nmbTasks,\n      };\n    case SET_SORT:\n      isSortByDesk = !state.sortField || state.sortField === action.payload\n        ? !state.sortByDesk\n        : false;\n\n\n      sortedTasks = [...state.currTaskTab].sort((taskA, taskB) => {\n        if (action.payload === 'status') {\n          return isSortByDesk\n            ? taskA[action.payload] - taskB[action.payload]\n            : taskB[action.payload] - taskA[action.payload];\n        }\n\n        if (isSortByDesk) {\n          result = taskA[action.payload] > taskB[action.payload]\n            ? -1\n            : taskA[action.payload] < taskB[action.payload]\n              ? 1\n              : 0;\n        } else {\n          result = taskA[action.payload] > taskB[action.payload]\n            ? 1\n            : taskA[action.payload] < taskB[action.payload]\n              ? -1\n              : 0;\n        }\n\n        return result;\n      });\n\n      return {\n        ...state,\n        currTaskTab: sortedTasks,\n        sortField: action.payload,\n        sortByDesk: isSortByDesk,\n      };\n    case EDIT_TASK:\n      newTasks = state.currTaskTab.map((task) => {\n        if (task.id === action.payload.id) {\n          return {\n            ...task,\n            ...action.payload,\n          };\n        }\n        return task;\n      });\n\n      return {\n        ...state,\n        currTaskTab: newTasks,\n      };\n    default:\n      return { ...state };\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport loginReducer from './login';\nimport tasksReducer from './tasks';\n\n\nconst allReducers = combineReducers({\n  login: loginReducer,\n  tasks: tasksReducer,\n});\n\nexport default allReducers;\n","import { createStore, applyMiddleware } from 'redux';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport allReducers from '../reducers/index';\n\n\nexport default createStore(allReducers, composeWithDevTools(applyMiddleware(thunk)));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport AppRouter from './AppRouter';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <AppRouter />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}